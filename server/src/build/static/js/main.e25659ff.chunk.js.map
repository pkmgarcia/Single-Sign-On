{"version":3,"sources":["modules/axios/config.js","modules/axios/employee.js","features/dashboard/DashboardLayout.js","features/twitter/TwitterLayout.js","features/MainLayout.styles.js","modules/firebase/config.js","modules/firebase/index.js","modules/redux/reducers/user.js","features/MainLayout.js","features/auth/LoginForm.styles.js","features/auth/LoginForm.js","features/auth/AuthLayout.styles.js","features/auth/AuthLayout.js","modules/theme.js","App.styles.js","App.js","serviceWorker.js","modules/redux/reducers/index.js","modules/redux/index.js","index.js"],"names":["host","baseURL","concat","employeeInstance","axios","create","getEmployee","emp_no","get","DashboardLayout","state","employee","_this2","this","employeeCRUD","then","response","data","setState","react_default","a","createElement","Component","TwitterLayout","styles","theme","root","width","height","toolbar","display","justifyContent","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","apps","length","initializeApp","auth","firestore","settings","timestampsInSnapshots","initialState","user","userTypes","MainLayout","openDrawer","toggleDrawer","_this","prevState","logout","signOut","props","deleteUser","classes","className","AppBar_default","position","Toolbar_default","IconButton_default","onClick","menuButton","aria-label","Menu_default","Button_default","index_es","open","onClose","Switch","Route","path","component","connect","dispatch","type","withStyles","withRouter","maxWidth","minWidth","backgroundColor","form","flexFlow","alignItems","margin","spacing","unit","& > *","marginTop","marginBottom","login","color","palette","primary","dark","register","secondary","errorMessage","error","main","divider","padding","withTheme","email","password","handleEmail","handlePassword","submit","Typography_default","variant","align","message","Paper_default","FormControl_default","TextField_default","id","label","value","onChange","event","target","backgroundImage","light","overflow","description","AuthLayout","handlers","handleChange","key","Object","defineProperty","signInWithEmailAndPassword","setUser","catch","_this$state","Hidden_default","smDown","auth_LoginForm","createMuiTheme","typography","useNextVariants","App","onAuthStateChanged","layout","features_MainLayout","auth_AuthLayout","CssBaseline_default","MuiThemeProvider_default","BrowserRouter","userReducer","Boolean","window","location","hostname","match","combineReducers","rootReducer","arguments","undefined","action","objectSpread","store","createStore","reducer","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e25659ff.chunk.js","sourcesContent":["const protocol = 'https';\nconst host = '98.207.137.133';\nconst port = '629';\nconst api = 'mysql'\nconst baseURL = port\n  ? `${protocol}://${host}:${port}/${api}`\n  : `${protocol}://${host}/${api}`;\n\nconst config = {\n  baseURL\n};\n\nexport {\n  protocol,\n  host,\n  port,\n  baseURL\n};\n\nexport default config;","import axios from 'axios';\nimport { baseURL } from './config';\n\nconst employeeInstance = axios.create({\n  baseURL: baseURL + '/employee'\n});\n\nconst getEmployee = emp_no => employeeInstance.get(`/${emp_no}`);\n// const updateEmployee = employee => employeeInstance.put();\n// const insertEmployee = employee => employeeInstance.post();\n// const deleteEmployee = emp_no => employeeInstance.delete();\n\nexport {\n  getEmployee\n};\n","import React, { Component } from 'react';\nimport { employeeCRUD } from '../../modules/axios';\n\nclass DashboardLayout extends Component {\n  state = {\n    employee: null\n  }\n\n  componentDidMount() {\n    employeeCRUD.getEmployee('10001')\n      .then((response) => {\n        const employee = response.data;\n        this.setState({ employee });\n      });\n  }\n\n  render() {\n    return (\n      <div>{this.state.employee}</div>\n    )\n  }\n}\n\nexport default DashboardLayout;\n\n","import React, { Component } from 'react';\n\nclass TwitterLayout extends Component {\n\n  render() {\n    return (\n      <div>TwitterLayout</div>\n    )\n  }\n}\n\nexport default TwitterLayout;","const styles = theme => ({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n});\n\nexport default styles;","const config = {\n  apiKey: \"AIzaSyCJZxhXHQpHD1fumUdkV75Ymr6P_cPv4Zg\",\n  authDomain: \"single-sign-on-d6b20.firebaseapp.com\",\n  databaseURL: \"https://single-sign-on-d6b20.firebaseio.com\",\n  projectId: \"single-sign-on-d6b20\",\n  storageBucket: \"single-sign-on-d6b20.appspot.com\",\n  messagingSenderId: \"603634660063\"\n};\n\nexport default config;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore'\nimport config from './config';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nexport {\n  firebase,\n  auth,\n  db\n};","const initialState = {\n  user: null\n};\n\nconst userTypes = {\n  SET_USER: 'SET_USER'\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case userTypes.SET_USER:\n      return { user: action.user };\n    default:\n      return { ...initialState };\n  }\n};\n\nexport {\n  initialState,\n  userTypes,\n  userReducer\n};\n\n/* Too complicated for what is needed now\nimport * as userActionTypes from '../actions'\nimport { userActions } from '../actions';\n\nconst {\n  SET_USER\n} = userActionTypes;\n\nconst user = (state = null, action) => {\n  switch (action.type) {\n    case SET_USER.type:\n      userActions[SET_USER](...action.payload);\n      break;\n    default:\n      return null;\n  }\n}\n\nexport {\n  user\n};\n*/","import React, { Component } from 'react';\nimport {\n  Switch,\n  Route,\n  withRouter\n} from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DashboardLayout from './dashboard/DashboardLayout';\nimport TwitterLayout from './twitter/TwitterLayout';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './MainLayout.styles';\nimport { Drawer } from '@material-ui/core';\nimport { auth } from '../modules/firebase';\nimport { userTypes } from '../modules/redux/reducers/user';\nimport { connect } from 'react-redux';\n\nclass MainLayout extends Component {\n  state = {\n    openDrawer: false\n  }\n\n  toggleDrawer = () => {\n    this.setState(prevState => ({\n      openDrawer: !prevState.openDrawer\n    }))\n  }\n\n  logout = () => {\n    auth.signOut()\n      .then(() => {\n        this.props.deleteUser();\n      })\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"static\"\n        >\n          <Toolbar\n            className={classes.toolbar}>\n            <IconButton\n              onClick={this.toggleDrawer}\n              className={classes.menuButton}\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Button\n              onClick={this.logout}>\n              Log Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          open={this.state.openDrawer}\n          onClose={() => this.setState({ openDrawer: false })}\n        >\n        </Drawer>\n        <Switch>\n          <Route path=\"/twitter\" component={TwitterLayout}></Route>\n          <Route path=\"/\" component={DashboardLayout}></Route>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deleteUser:  () => dispatch({ type: userTypes.SET_USER, user: null })\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(withRouter(MainLayout)));","const styles = theme => ({\n  root: {\n    display: 'flex',\n    maxWidth: '375px',\n    minWidth: '275px',\n    width: '50%',\n    backgroundColor: 'white'\n  },\n  form: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: theme.spacing.unit * 2.5,\n    width: '100%',\n    '& > *': {\n      marginTop: theme.spacing.unit * 1.5,\n      marginBottom: theme.spacing.unit * 1.5,\n      width: '100%'\n    }\n  },\n  login: {\n    color: theme.palette.primary.dark\n  },\n  register: {\n    color: theme.palette.secondary.dark\n  },\n  errorMessage: {\n    color: theme.palette.error.main\n  },\n  divider: {\n    width: '95%',\n    height: '1px',\n    padding: 0,\n    backgroundColor: 'silver'\n  }\n});\n\nexport default styles;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './LoginForm.styles';\n\nconst LoginForm = (props) => {\n  const { classes } = props;\n  const { email, password, error } = props;\n  const { handleEmail, handlePassword, submit } = props;\n\n  const errorMessage = error\n  ? (\n    <Typography\n      className={classes.errorMessage}\n      variant=\"body1\"\n      align=\"center\"\n    > {error.message}\n    </Typography>\n    )\n  : null;\n\n  return (\n    <Paper className={classes.root}>\n      <form className={classes.form}>\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n        > Sign In\n        </Typography>\n        <FormControl>\n          <TextField\n            id=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={email}\n            variant=\"outlined\"\n            onChange={event => handleEmail(event.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            variant=\"outlined\"\n            onChange={event => handlePassword(event.target.value)}\n          />\n        </FormControl>\n        <Button\n          className={classes.login}\n          onClick={submit}\n          variant=\"outlined\"\n        > Log In\n        </Button>\n        <div>\n          {errorMessage}\n        </div>\n        <div className={classes.divider}/>\n        <Button\n          className={classes.register}\n        > Register\n        </Button>\n      </form>\n    </Paper>\n  )\n};\n\nexport default withStyles(styles, { withTheme: true })(LoginForm);","const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    backgroundImage: `linear-gradient(${theme.palette.primary.light}, ${theme.palette.secondary.main})`,\n    overflow: 'hidden'\n  },\n  description: {\n    '& > *': {\n      margin: '8px 16px',\n    }\n  }\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport LoginForm from './LoginForm';\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\nimport styles from './AuthLayout.styles';\nimport { auth } from '../../modules/firebase';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { userTypes } from '../../modules/redux/reducers/user';\n\nclass AuthLayout extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handlers ={\n    handleChange: key => value => {\n      this.setState({\n        [key]: value\n      });\n    },\n    submit: () => {\n      auth.signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(user => {\n          this.props.setUser(user);\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { email, password, error } = this.state;\n    const { handlers } = this;\n\n    return (\n      <div className={classes.root}>\n        <Hidden smDown>\n          <div className={classes.description}>\n              <Typography\n                variant=\"h1\"\n              > Payroll\n              </Typography>\n              <Typography\n                variant=\"h5\"\n              > A new way to interact with your salary history!\n              </Typography>\n          </div>\n        </Hidden>\n        <LoginForm\n          email={email}\n          password={password}\n          error={error}\n          handleEmail={handlers.handleChange('email')}\n          handlePassword={handlers.handleChange('password')}\n          submit={handlers.submit}\n        />\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setUser: user => dispatch({ type: userTypes.SET_USER, user })\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles, { withTheme: true })(AuthLayout));","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#81d3f9',\n      light: '#b5ffff',\n      dark: '#4ba2c6'\n    },\n    secondary: {\n      main: '#ffca28',\n      light: '#fffd61',\n      dark: '#c79a00'\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nexport default createMuiTheme(theme);","const styles = theme => ({\n  root: {\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: '#EEEEEE'\n  }\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport MainLayout from './features/MainLayout';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthLayout from './features/auth/AuthLayout';\nimport theme from './modules/theme';\nimport styles from './App.styles';\nimport { connect } from 'react-redux';\nimport { auth } from './modules/firebase';\nimport { userTypes } from './modules/redux/reducers/user';\n\nclass App extends Component {\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.props.setUser(user);\n      }\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const layout = this.props.user\n      ? <MainLayout/>\n      : <AuthLayout />\n\n    return (\n      <CssBaseline>\n        <MuiThemeProvider theme={theme}>\n          <BrowserRouter>\n            <div className={classes.root}>\n              {layout}\n            </div>\n          </BrowserRouter>\n        </MuiThemeProvider>\n      </CssBaseline>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setUser: user => dispatch({ type: userTypes.SET_USER, user })\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n// import other reducers\nimport { userReducer } from './user';\n\nconst initialState = { };\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  rootReducer,\n  userReducer\n});","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './modules/redux';\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
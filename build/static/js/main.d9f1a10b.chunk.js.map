{"version":3,"sources":["modules/axios/config.js","modules/axios/employee.js","features/dashboard/DashboardLayout.js","features/twitter/TwitterLayout.js","features/MainLayout.styles.js","modules/firebase/config.js","modules/firebase/index.js","modules/redux/reducers/user.js","features/MainLayout.js","features/auth/LoginForm.styles.js","modules/axios/twitter.js","features/auth/LoginForm.js","features/auth/AuthLayout.styles.js","features/auth/AuthLayout.js","modules/theme.js","App.styles.js","App.js","serviceWorker.js","modules/redux/reducers/index.js","modules/redux/index.js","index.js"],"names":["host","baseURL","concat","employeeInstance","axios","create","getEmployee","emp_no","get","DashboardLayout","state","employee","_this2","this","employeeCRUD","then","response","data","setState","react_default","a","createElement","Component","TwitterLayout","styles","theme","root","width","height","toolbar","display","justifyContent","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","apps","length","initializeApp","auth","firestore","settings","timestampsInSnapshots","initialState","user","userTypes","MainLayout","openDrawer","toggleDrawer","_this","prevState","logout","signOut","props","deleteUser","classes","className","AppBar_default","position","Toolbar_default","IconButton_default","onClick","menuButton","aria-label","Menu_default","Button_default","index_es","open","onClose","Switch","Route","path","component","connect","dispatch","type","withStyles","withRouter","maxWidth","minWidth","backgroundColor","form","flexFlow","alignItems","margin","spacing","unit","& > *","marginTop","marginBottom","login","color","palette","primary","dark","register","secondary","errorMessage","error","main","divider","padding","twitterInstance","initiateTwitterOAuth","withTheme","email","password","handleEmail","handlePassword","submit","Typography_default","variant","align","message","Paper_default","FormControl_default","TextField_default","id","label","value","onChange","event","target","backgroundImage","overflow","description","AuthLayout","handlers","handleChange","key","Object","defineProperty","signInWithEmailAndPassword","setUser","catch","_this$state","Hidden_default","smDown","auth_LoginForm","createMuiTheme","typography","useNextVariants","App","onAuthStateChanged","layout","features_MainLayout","auth_AuthLayout","CssBaseline_default","MuiThemeProvider_default","BrowserRouter","userReducer","Boolean","window","location","hostname","match","combineReducers","rootReducer","arguments","undefined","action","objectSpread","store","createStore","reducer","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9f1a10b.chunk.js","sourcesContent":["const protocol = 'https';\r\nconst host = '98.207.137.133';\r\nconst port = '629';\r\nconst baseURL = port\r\n  ? `${protocol}://${host}:${port}`\r\n  : `${protocol}://${host}`;\r\n\r\nconst config = {\r\n  baseURL\r\n};\r\n\r\nexport {\r\n  protocol,\r\n  host,\r\n  port,\r\n  baseURL\r\n};\r\n\r\nexport default config;","import axios from 'axios';\r\nimport { baseURL } from './config';\r\n\r\nconst api = 'mysql'\r\n\r\nconst employeeInstance = axios.create({\r\n  baseURL: `${baseURL}/${api}/employee`\r\n});\r\n\r\nconst getEmployee = emp_no => employeeInstance.get(`/${emp_no}`);\r\n// const updateEmployee = employee => employeeInstance.put();\r\n// const insertEmployee = employee => employeeInstance.post();\r\n// const deleteEmployee = emp_no => employeeInstance.delete();\r\n\r\nexport {\r\n  getEmployee\r\n};\r\n","import React, { Component } from 'react';\r\nimport { employeeCRUD } from '../../modules/axios';\r\n\r\nclass DashboardLayout extends Component {\r\n  state = {\r\n    employee: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    employeeCRUD.getEmployee('10001')\r\n      .then((response) => {\r\n        const employee = response.data;\r\n        this.setState({ employee });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>{this.state.employee}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DashboardLayout;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass TwitterLayout extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>TwitterLayout</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TwitterLayout;","const styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n\r\n});\r\n\r\nexport default styles;","const config = {\r\n  apiKey: \"AIzaSyCJZxhXHQpHD1fumUdkV75Ymr6P_cPv4Zg\",\r\n  authDomain: \"single-sign-on-d6b20.firebaseapp.com\",\r\n  databaseURL: \"https://single-sign-on-d6b20.firebaseio.com\",\r\n  projectId: \"single-sign-on-d6b20\",\r\n  storageBucket: \"single-sign-on-d6b20.appspot.com\",\r\n  messagingSenderId: \"603634660063\"\r\n};\r\n\r\nexport default config;","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore'\r\nimport config from './config';\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\ndb.settings({\r\n  timestampsInSnapshots: true\r\n});\r\n\r\nexport {\r\n  firebase,\r\n  auth,\r\n  db\r\n};","const initialState = {\r\n  user: null\r\n};\r\n\r\nconst userTypes = {\r\n  SET_USER: 'SET_USER'\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case userTypes.SET_USER:\r\n      return { user: action.user };\r\n    default:\r\n      return { ...initialState };\r\n  }\r\n};\r\n\r\nexport {\r\n  initialState,\r\n  userTypes,\r\n  userReducer\r\n};\r\n\r\n/* Too complicated for what is needed now\r\nimport * as userActionTypes from '../actions'\r\nimport { userActions } from '../actions';\r\n\r\nconst {\r\n  SET_USER\r\n} = userActionTypes;\r\n\r\nconst user = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_USER.type:\r\n      userActions[SET_USER](...action.payload);\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport {\r\n  user\r\n};\r\n*/","import React, { Component } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport DashboardLayout from './dashboard/DashboardLayout';\r\nimport TwitterLayout from './twitter/TwitterLayout';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './MainLayout.styles';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { auth } from '../modules/firebase';\r\nimport { userTypes } from '../modules/redux/reducers/user';\r\nimport { connect } from 'react-redux';\r\n\r\nclass MainLayout extends Component {\r\n  state = {\r\n    openDrawer: false\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.setState(prevState => ({\r\n      openDrawer: !prevState.openDrawer\r\n    }))\r\n  }\r\n\r\n  logout = () => {\r\n    auth.signOut()\r\n      .then(() => {\r\n        this.props.deleteUser();\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar\r\n          position=\"static\"\r\n        >\r\n          <Toolbar\r\n            className={classes.toolbar}\r\n          >\r\n            <IconButton\r\n              onClick={this.toggleDrawer}\r\n              className={classes.menuButton}\r\n              aria-label=\"Menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Button\r\n              onClick={this.logout}>\r\n              Log Out\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          open={this.state.openDrawer}\r\n          onClose={() => this.setState({ openDrawer: false })}\r\n        >\r\n        </Drawer>\r\n        <Switch>\r\n          <Route path=\"/twitter\" component={TwitterLayout}></Route>\r\n          <Route path=\"/\" component={DashboardLayout}></Route>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteUser:  () => dispatch({ type: userTypes.SET_USER, user: null })\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(withRouter(MainLayout)));","const styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    maxWidth: '375px',\r\n    minWidth: '275px',\r\n    width: '50%',\r\n    backgroundColor: 'white'\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: theme.spacing.unit * 2.5,\r\n    width: '100%',\r\n    '& > *': {\r\n      marginTop: theme.spacing.unit * 1.5,\r\n      marginBottom: theme.spacing.unit * 1.5,\r\n      width: '100%'\r\n    }\r\n  },\r\n  login: {\r\n    color: theme.palette.primary.dark\r\n  },\r\n  register: {\r\n    color: theme.palette.secondary.dark\r\n  },\r\n  errorMessage: {\r\n    color: theme.palette.error.main\r\n  },\r\n  divider: {\r\n    width: '95%',\r\n    height: '1px',\r\n    padding: 0,\r\n    backgroundColor: 'silver'\r\n  }\r\n});\r\n\r\nexport default styles;","import axios from 'axios';\r\nimport { baseURL } from './config';\r\n\r\nconst api = '/twitter';\r\n\r\nconst twitterInstance = axios.create({\r\n  baseURL: `${baseURL}${api}`\r\n});\r\n\r\nconst initiateTwitterOAuth = () => twitterInstance.get('/oauth');\r\n\r\nexport {\r\n  initiateTwitterOAuth\r\n};\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './LoginForm.styles';\r\n\r\nimport { initiateTwitterOAuth } from '../../modules/axios/twitter';\r\n\r\nconst LoginForm = (props) => {\r\n  const { classes } = props;\r\n  const { email, password, error } = props;\r\n  const { handleEmail, handlePassword, submit } = props;\r\n\r\n  const errorMessage = error\r\n  ? (\r\n    <Typography\r\n      className={classes.errorMessage}\r\n      variant=\"body1\"\r\n      align=\"center\"\r\n    > {error.message}\r\n    </Typography>\r\n    )\r\n  : null;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form className={classes.form}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          align=\"center\"\r\n        > Sign In\r\n        </Typography>\r\n        <FormControl>\r\n          <TextField\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            variant=\"outlined\"\r\n            onChange={event => handleEmail(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <TextField\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            variant=\"outlined\"\r\n            onChange={event => handlePassword(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          className={classes.login}\r\n          onClick={submit}\r\n          variant=\"outlined\"\r\n        > Log In\r\n        </Button>\r\n        <div>\r\n          {errorMessage}\r\n        </div>\r\n        <div className={classes.divider}/>\r\n        <Button\r\n          className={classes.register}\r\n          onClick={initiateTwitterOAuth}\r\n        > Register\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(LoginForm);","const styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundImage: `linear-gradient(#ffffff, ${theme.palette.secondary.main})`,\r\n    overflow: 'hidden'\r\n  },\r\n  description: {\r\n    '& > *': {\r\n      margin: '8px 16px',\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport styles from './AuthLayout.styles';\r\nimport { auth } from '../../modules/firebase';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { userTypes } from '../../modules/redux/reducers/user';\r\n\r\nclass AuthLayout extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handlers ={\r\n    handleChange: key => value => {\r\n      this.setState({\r\n        [key]: value\r\n      });\r\n    },\r\n    submit: () => {\r\n      auth.signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(user => {\r\n          this.props.setUser(user);\r\n        })\r\n        .catch(error => {\r\n          this.setState({ error });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { email, password, error } = this.state;\r\n    const { handlers } = this;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Hidden smDown>\r\n          <div className={classes.description}>\r\n              <Typography\r\n                variant=\"h1\"\r\n              > Single Sign-On\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n              > Access multiple applications with <strong>one</strong> set of credentials\r\n              </Typography>\r\n          </div>\r\n        </Hidden>\r\n        <LoginForm\r\n          email={email}\r\n          password={password}\r\n          error={error}\r\n          handleEmail={handlers.handleChange('email')}\r\n          handlePassword={handlers.handleChange('password')}\r\n          submit={handlers.submit}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUser: user => dispatch({ type: userTypes.SET_USER, user })\r\n})\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(withStyles(styles, { withTheme: true })(AuthLayout));","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#212121'\r\n    },\r\n    secondary: {\r\n      main: '#9fa8da'\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nexport default createMuiTheme(theme);","const styles = theme => ({\r\n  root: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    backgroundColor: '#EEEEEE'\r\n  }\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport MainLayout from './features/MainLayout';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AuthLayout from './features/auth/AuthLayout';\r\nimport theme from './modules/theme';\r\nimport styles from './App.styles';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from './modules/firebase';\r\nimport { userTypes } from './modules/redux/reducers/user';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.props.setUser(user);\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const layout = this.props.user\r\n      ? <MainLayout/>\r\n      : <AuthLayout />\r\n\r\n    return (\r\n      <CssBaseline>\r\n        <MuiThemeProvider theme={theme}>\r\n          <BrowserRouter>\r\n            <div className={classes.root}>\r\n              {layout}\r\n            </div>\r\n          </BrowserRouter>\r\n        </MuiThemeProvider>\r\n      </CssBaseline>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUser: user => dispatch({ type: userTypes.SET_USER, user })\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withStyles(styles)(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n// import other reducers\r\nimport { userReducer } from './user';\r\n\r\nconst initialState = { };\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  rootReducer,\r\n  userReducer\r\n});","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './modules/redux';\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}